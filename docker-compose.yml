version: "3"

services:
  ingest:
    container_name: ingest
    build:
      context: ingest
      dockerfile: deploy/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - ACCESS_SECRET=${ACCESS_SECRET}
      - ACCESS_KEY=${ACCESS_KEY}
      - CONSUMER_SECRET=${CONSUMER_SECRET}
      - CONSUMER_KEY=${CONSUMER_KEY}
    command: ["./wait-for-it.sh", "rabbitmq:15672", "--timeout=60", "--", "./ingest"]

  worker:
    container_name: worker
    build:
      context: worker
      dockerfile: deploy/Dockerfile
    depends_on:
      - rabbitmq
      - ingest
    command: ["./wait-for-it.sh", "rabbitmq:15672", "--timeout=60", "--", "./worker"]

  rabbitmq:
    image: "bitnami/rabbitmq:3.8"
    container_name: rabbitmq
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/bitnami"
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
  rabbitmq_data:
    driver: local
